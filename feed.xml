<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dry Heat Burnes</title>
    <atom:link href="//feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>/</link>
    <description>and other stuff.</description>
    <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Mapping a GeoRSS Feed</title>
      <link>//articles/mapping-CLT-incidents/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      <guid isPermaLink="true">//articles/mapping-CLT-incidents/</guid>
      <author></author>
      <description>&lt;p&gt;Using the traffic incident data from the City of Charlotte’s RSS Feed to transform and map incident geodata.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;background&quot;&gt;Background&lt;/h4&gt;
&lt;p&gt;Many different local, state, and federal governments use RSS/GeoRSS feeds to keep the public and stakeholders informed.  To use a location based GeoRSS feed for
modern web mapping, the feed has to be converted from XML to JSON/GeoJSON to integrate easily with a variety of open source mapping libraries.  The test feed is
brought to us by the Charlotte, NC… “Charlotte’s Got A Lot.”&lt;/p&gt;
&lt;p&gt;The feed can be found at &lt;a href=&quot;http://maps.cmpd.org/datafeeds/accidentsgeorss.ashx&quot;&gt;http://maps.cmpd.org/datafeeds/accidentsgeorss.ashx&lt;/a&gt;.  This feed comes to me from 
&lt;a href=&quot;https://github.com/invisiblefunnel&quot;&gt;Danny Whalen&lt;/a&gt; who is a 2014 &lt;a href=&quot;http://codeforamerica.org/&quot;&gt;Code for America&lt;/a&gt; fellow working with the City of Charlotte to build innovative civic apps.&lt;/p&gt;
&lt;h4 id=&quot;putting-node-js-to-work&quot;&gt;Putting Node.js to Work&lt;/h4&gt;
&lt;p&gt;To retrieve the feed, transform the data, and map the incidents, I will be using &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; and the source can be found at 
&lt;a href=&quot;https://github.com/apburnes/clt_crash_map&quot;&gt;https://github.com/apburnes/clt_crash_map&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Get and Transofm the GeoRSS&lt;/strong&gt;&lt;/p&gt;
&lt;h6 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.org/package/request&quot;&gt;request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.org/package/xml2js&quot;&gt;xml2js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;install&quot;&gt;Install&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;npm install request&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install xml2js&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;get-the-data&quot;&gt;Get the Data&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;#!&lt;span class=&quot;regexp&quot;&gt;/bin/&lt;/span&gt;env node
&lt;span class=&quot;comment&quot;&gt;/*** getFeed.js ***/&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;// Require and utilize the dependencies&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; request = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;'request'&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; parseString = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;'xml2js'&lt;/span&gt;).parseString

&lt;span class=&quot;comment&quot;&gt;// The location of the GeoRSS feed&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&quot;http://maps.cmpd.org/datafeeds/accidentsgeorss.ashx&quot;&lt;/span&gt;;

&lt;span class=&quot;comment&quot;&gt;// Get and convert GeoRss XML to an array of objects&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getGeoRss&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(url, done)&lt;/span&gt; {&lt;/span&gt;
  request(url, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(err, res, body)&lt;/span&gt; {&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; log(err);
    parseString(body, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(err, result)&lt;/span&gt; {&lt;/span&gt;
      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; log(err);
      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; events = result.rss.channel[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].item;
      done(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, events);
    });
  });
}

&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg)&lt;/span&gt; {&lt;/span&gt;
  console.log(msg);
}

exports.getGeoRss = getGeoRss;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&quot;the-output&quot;&gt;The Output&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;[{&lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Feature&quot;&lt;/span&gt;,
  &lt;span class=&quot;string&quot;&gt;&quot;properties&quot;&lt;/span&gt;: [{
    &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;TRAFFIC CONTROL/MALFUNCTION at 707  PAVILION BV &quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;eventNum&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;O0529164400&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;dateAdded&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;5/29/2014 4:44:16 PM&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;division&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;UNIVERSITY CITY&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;address&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;707  PAVILION BV &quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;eventType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;TF-CNTRL&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;eventDesc&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;TRAFFIC CONTROL/MALFUNCTION&quot;&lt;/span&gt;
  }],
  &lt;span class=&quot;string&quot;&gt;&quot;geometry&quot;&lt;/span&gt;: [{
    &lt;span class=&quot;string&quot;&gt;&quot;type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Point&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;: [
      &lt;span class=&quot;string&quot;&gt;&quot;-80.710670&quot;&lt;/span&gt;,
      &lt;span class=&quot;string&quot;&gt;&quot;35.327362&quot;&lt;/span&gt;
    ]
  }]
}, ...]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
  </channel>
</rss>